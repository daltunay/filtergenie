name: update-badges
permissions:
  contents: write

on:
  deployment_status:
  schedule:
    - cron: "*/5 * * * *"

jobs:
  update-render-badge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Badge URL
        id: render_badge
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        run: echo "url=$(bash scripts/render_badge.sh)" >> "$GITHUB_OUTPUT"

      - name: Update README
        id: update_readme
        run: |
          render_url="${{ steps.render_badge.outputs.url }}"
          sed -i "s|!\[Render Status\](\([^)]*\))|![Render Status]($render_url)|" README.md
          diff=$(git diff README.md)
          echo "$diff"
          if [ -n "$diff" ]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Commit and push if changed
        if: steps.update_readme.outputs.changed == 'true'
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "github-actions"
          git pull --rebase origin master
          git commit -am "[skip render] update render badge"
          git push

  update-deployment-badge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Badge URL
        id: deployment_badge
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo "url=$(bash scripts/deployment_badge.sh)" >> "$GITHUB_OUTPUT"

      - name: Update README
        id: update_readme
        run: |
          deployment_url="${{ steps.deployment_badge.outputs.url }}"
          sed -i "s|!\[Deployment Status\](\([^)]*\))|![Deployment Status]($deployment_url)|" README.md
          diff=$(git diff README.md)
          echo "$diff"
          if [ -n "$diff" ]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Commit and push if changed
        if: steps.update_readme.outputs.changed == 'true'
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "github-actions"
          git pull --rebase origin master
          git commit -am "[skip render] update deployment badge"
          git push
